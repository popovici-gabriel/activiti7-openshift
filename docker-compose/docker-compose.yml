version: '2'

services:

  activiti-postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_USER=activiti
      - POSTGRES_DB=activitidb
    volumes:
      - "pgdata:/var/lib/postgresql/data"  
    restart: unless-stopped

  nginx: 
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:      
      - 80:80   
      - 443:443
    restart: unless-stopped

  rabbitmq:
    container_name: rabbitmq
    image: activiti/rabbitmq-stomp:7.0.0.RC1
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
     - rabbitmq-data
    restart: unless-stopped

  keycloak:
    container_name: keycloak
    image: activiti/activiti-keycloak:${VERSION}
    volumes:
      - ./activiti-realm.json:/opt/jboss/keycloak/activiti-realm.json
    restart: unless-stopped
    depends_on:
      - nginx

  runtime-bundle:
    container_name: runtime-bundle
    #    image: activiti/runtime-bundle:${VERSION}
    image: activiti/runtime-bundle:7.0.56
    environment:
      # JAVA_OPTS: "-Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8000,suspend=n -noverify"
      SPRING_JMX_ENABLED: "false"
      ACT_KEYCLOAK_URL: "http://${DOCKER_IP}/auth"
      SPRING_RABBITMQ_HOST: "rabbitmq"
      SERVER_SERVLET_CONTEXT_PATH: /rb-my-app
      SPRING_DATASOURCE_URL: jdbc:postgresql://activiti-postgres:5432/activitidb
      SPRING_DATASOURCE_USERNAME: activiti
      SPRING_DATASOURCE_PASSWORD: mypassword
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_GENERATE_DDL: "true"
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    restart: unless-stopped
    depends_on:
      - nginx
      - keycloak
      - rabbitmq 
      - activiti-postgres        

  activiti-cloud-query:
    container_name: activiti-cloud-query
    image: activiti/activiti-cloud-query:${VERSION}
    environment:
      # JAVA_OPTS: "-Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8000,suspend=n -noverify"
      SPRING_JMX_ENABLED: "false"
      SPRING_RABBITMQ_HOST: "rabbitmq"
      ACT_KEYCLOAK_URL: "http://${DOCKER_IP}/auth"
      SERVER_SERVLET_CONTEXT_PATH: /query
      SPRING_DATASOURCE_URL: jdbc:postgresql://activiti-postgres:5432/activitidb
      SPRING_DATASOURCE_USERNAME: activiti
      SPRING_DATASOURCE_PASSWORD: mypassword
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_GENERATE_DDL: "true"
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    restart: unless-stopped
    depends_on:
      - nginx
      - keycloak
      - rabbitmq
      - activiti-postgres      
  
  activiti-cloud-audit:
    container_name: activiti-cloud-audit
    image: activiti/activiti-cloud-audit:${VERSION}
    environment:
      # JA`VA_OPTS: "-Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8000,suspend=n -noverify"
      SPRING_JMX_ENABLED: "false"
      SPRING_RABBITMQ_HOST: "rabbitmq"
      ACT_KEYCLOAK_URL: "http://${DOCKER_IP}/auth"
      SERVER_SERVLET_CONTEXT_PATH: /audit
      SPRING_DATASOURCE_URL: jdbc:postgresql://activiti-postgres:5432/activitidb
      SPRING_DATASOURCE_USERNAME: activiti
      SPRING_DATASOURCE_PASSWORD: mypassword
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_GENERATE_DDL: "true"
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    restart: unless-stopped
    depends_on:
      - nginx
      - keycloak
      - rabbitmq
      - activiti-postgres      

  activiti-cloud-notifications-graphql:  
    container_name: activiti-cloud-notifications-graphql
    image: activiti/activiti-cloud-notifications-graphql:${VERSION}
    environment:
      # JAVA_OPTS: "-Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8000,suspend=n -noverify"
      SPRING_JMX_ENABLED: "false"
      SPRING_RABBITMQ_HOST: "rabbitmq"
      ACT_KEYCLOAK_URL: "http://${DOCKER_IP}/auth"
      SPRING_DATASOURCE_URL: jdbc:postgresql://activiti-postgres:5432/activitidb
      SPRING_DATASOURCE_USERNAME: activiti
      SPRING_DATASOURCE_PASSWORD: mypassword
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_GENERATE_DDL: "false"
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SERVER_SERVLET_CONTEXT_PATH: "/notifications"
      SPRING_JPA_PROPERTIES_HIBERNATE_TEMP_USE_JDBC_METADATA_DEFAULTS: "false"
    restart: unless-stopped
    depends_on:
      - nginx
      - keycloak
      - rabbitmq
      - activiti-postgres
  
  activiti-cloud-modeling:
    container_name: activiti-cloud-modeling
    image: activiti/activiti-modeling-app:${VERSION}
    environment:
      # JAVA_OPTS: "-Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8000,suspend=n -noverify"
      APP_CONFIG_OAUTH2_HOST: "http://${DOCKER_IP}/auth/realms/${KEYCLOAK_REALM}"
      APP_CONFIG_OAUTH2_CLIENTID: "${KEYCLOAK_REALM}"
      API_URL: "http://${DOCKER_IP}"
      BASE_PATH: /activiti-cloud-modeling/
      APP_CONFIG_BPM_HOST: "http://${DOCKER_IP}/activiti-cloud-modeling-backend"
      APP_CONFIG_OAUTH2_REDIRECT_SILENT_IFRAME_URI: /activiti-cloud-modeling/assets/silent-refresh.html
      APP_CONFIG_OAUTH2_REDIRECT_LOGIN: /activiti-cloud-modeling
      APP_CONFIG_OAUTH2_REDIRECT_LOGOUT: /activiti-cloud-modeling
    restart: unless-stopped

  activiti-cloud-modeling-backend:
    container_name: activiti-cloud-modeling-backend
    image: activiti/activiti-cloud-modeling:${VERSION}
    #image: activiti/activiti-cloud-modeling:7.1.76
    environment:
      JAVA_OPTS:                    -Xmx1024m -Xms512m -XX:+UnlockExperimentalVMOptions   -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
      SPRING_APPLICATION_NAME:      activiti-cloud-modeling-backend
      SERVER_PORT:                  8080
      ACT_KEYCLOAK_URL:             http://${DOCKER_IP}/auth
      ACT_KEYCLOAK_REALM:           ${KEYCLOAK_REALM}
      ACT_KEYCLOAK_RESOURCE:        ${KEYCLOAK_RESOURCE}
      ACTIVITI_CLOUD_MODELING_URL:  localhost:8080
      SERVER_SERVLET_CONTEXT_PATH:  /activiti-cloud-modeling-backend 

volumes:
  rabbitmq-data:
  pgdata:

    
