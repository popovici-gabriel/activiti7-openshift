---
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-migration
spec:
  template:
    metadata:
      name: kong-migration
    spec:
      containers:
      - name: kong-migration
        image: kong
        resources:
          limits:
            cpu: "100m"
            memory: 2048Mi
        env:
          - name: KONG_NGINX_DAEMON
            value: 'off'
          - name: KONG_PG_USER
            value: postgres
          - name: KONG_PG_DATABASE
            value: postgres
          - name: KONG_PG_PASSWORD
            value: password
          - name: KONG_PG_HOST
            value: act-postgres
        command: [ "/bin/sh", "-c", "kong migrations bootstrap" ]
      restartPolicy: Never
---
apiVersion: v1
kind: Service
metadata:
  name: kong-proxy
spec:
  type: ClusterIP
  ports:
  - name: kong-proxy
    port: 8000
    targetPort: 8000
    protocol: TCP
  selector:
    app: kong

---
apiVersion: v1
kind: Service
metadata:
  name: kong-proxy-ssl
spec:
  type: ClusterIP
  ports:
  - name: kong-proxy-ssl
    port: 8443
    targetPort: 8443
    protocol: TCP
  selector:
    app: kong
---
apiVersion: v1
kind: Service
metadata:
  name: kong-admin
spec:
  type: ClusterIP
  ports:
  - name: kong-admin
    port: 8001
    targetPort: 8001
    protocol: TCP
  selector:
    app: kong

---
apiVersion: v1
kind: Service
metadata:
  name: kong-admin-ssl
spec:
  type: ClusterIP
  ports:
  - name: kong-admin-ssl
    port: 8444
    targetPort: 8444
    protocol: TCP
  selector:
    app: kong

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kong-rc
spec:
  serviceName: kong-proxy
  podManagementPolicy: OrderedReady
  volumeClaimTemplates:
  - metadata:
      name: logs
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "cinder"
      resources:
        requests:
          storage: 1Gi
  selector:
    matchLabels:
      app: kong
  replicas: 1
  template:
    metadata:
      labels:
        name: kong-rc
        app: kong
    spec:
      initContainers:
      - name: fix-logs-permissions
        image: kong:latest
        command: ["sh", "-c", "chmod -R oga+rwxs /kong-logs && chown -R kong:1337 /kong-logs"]
        volumeMounts:
        - name: logs
          mountPath: /kong-logs
      containers:
      - name: kong
        image: kong
        volumeMounts:
        - name: logs
          mountPath: /kong-logs
        env:
          - name: KONG_ADMIN_LISTEN
            value: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
          - name: KONG_PG_USER
            value: postgres
          - name: KONG_PG_DATABASE
            value: postgres
          - name: KONG_PG_PASSWORD
            value: password
          - name: KONG_PG_HOST
            value: act-postgres
          - name: KONG_PROXY_ACCESS_LOG
            value: "/kong-logs/proxy.log"
          - name: KONG_ADMIN_ACCESS_LOG
            value: "/kong-logs/admin.log"
          - name: KONG_PROXY_ERROR_LOG
            value: "/kong-logs/proxy.log"
          - name: KONG_ADMIN_ERROR_LOG
            value: "/kong-logs/admin.log"
        ports:
        - name: admin
          containerPort: 8001
          protocol: TCP
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-ssl
          containerPort: 8443
          protocol: TCP
        - name: admin-ssl
          containerPort: 8444
          protocol: TCP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: konga
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: konga
        app: konga
    spec:
      containers:
      - name: konga
        image: pantsel/konga:latest
        ports:
        - containerPort: 1337
        resources:
          limits:
            cpu: "100m"
            memory: 2048Mi
---
apiVersion: v1
kind: Service
metadata:
  name: konga
spec:
  type: NodePort
  ports:
  - name: kong-proxy
    port: 1337
    targetPort: 1337
    protocol: TCP
  selector:
    app: konga